=begin
#ocrapi

#The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveOcrApiClient::PreprocessingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PreprocessingApi' do
  before do
    # run before each test
    @instance = CloudmersiveOcrApiClient::PreprocessingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PreprocessingApi' do
    it 'should create an instance of PreprocessingApi' do
      expect(@instance).to be_instance_of(CloudmersiveOcrApiClient::PreprocessingApi)
    end
  end

  # unit tests for preprocessing_binarize
  # Convert an image of text into a binary (light and dark) view
  # Perform an advanced adaptive, machine learning-based binarization algorithm on the input image to prepare it for further OCR operations.
  # @param image_file Image file to perform OCR on.  Common file formats such as PNG, JPEG are supported.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'preprocessing_binarize test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for preprocessing_unrotate
  # Detect and unrotate a document image
  # Detect and unrotate an image of a document (e.g. that was scanned at an angle).  Great for document scanning applications; once unskewed, this image is perfect for converting to PDF using the Convert API or optical character recognition using the OCR API.
  # @param image_file Image file to perform OCR on.  Common file formats such as PNG, JPEG are supported.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'preprocessing_unrotate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for preprocessing_unskew
  # Detect and unskew a photo of a document
  # Detect and unskew a photo of a document (e.g. taken on a cell phone) into a perfectly square image.  Great for document scanning applications; once unskewed, this image is perfect for converting to PDF using the Convert API or optical character recognition using the OCR API.
  # @param image_file Image file to perform OCR on.  Common file formats such as PNG, JPEG are supported.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'preprocessing_unskew test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
